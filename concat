#!/bin/bash
# nb: the swp file that editscript relies on is provided by nano

. /usr/local/editscript

ext="opus"
#ext="m4b"
#ext="flac"
ext="mp3"
#ext="${1##*.}"
scriptname="$(realpath $0)"

shopt -s extglob
 if [[ "$1" = --ext=@(m4b|m4a|mp3) ]]; then
   ext="$1"
   shift
   ext="${ext#*=}"
   pause "new extension: $ext"
 fi

title="${1%.*}"

escapepath(){
  for f in ./*."$ext"*; do
    if [[ "$PWD/$f" == *\'* ]]; then
      ff="$f"; dir="$PWD"
      [[ "$f" == *\'* ]] && ff="${f//\'/\'\\\'\'}" || ff="$f"
      [[ "$PWD" = *\'* ]] && dir="${PWD//\'/\'\\\'\'}"
      echo "file '$dir/$ff'" #>> "$tmp/opusfiles"
    else
      echo "file '$PWD/$f'" #>> "$tmp/opusfiles"
    fi
  done
}


[[ "$title" =~ \."$ext"$ ]] && title="${title%.$ext}"

## Process substitution (<(escapepath)) creates a named pipe like /dev/fd/63, which ffmpeg treats as a normal input â€” no file: needed or allowed there.

if [[ "$ext" == "flac" ]]; then
  ffmpeg -nostdin -hide_banner -stats -f concat -safe 0 -thread_queue_size 1024 -i <(escapepath) file:"$title.$ext"
elif [[ "$2" == "-y" ]]; then
  ffmpeg -nostdin -hide_banner -stats -f concat -safe 0 -thread_queue_size 1024 -y -i <(escapepath) -acodec copy file:"$title.$ext"
else
  ffmpeg -nostdin -hide_banner -stats -f concat -safe 0 -thread_queue_size 1024 -i <(escapepath) -acodec copy file:"$title.$ext"
fi

