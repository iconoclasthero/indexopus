#!/bin/bash
shopt -s extglob

scriptname=$(realpath "$0")

function editscript(){
  local script path; script="${scriptname##*/}"; path="${scriptname%/*}"; swp="$path/.$script.swp"
     if [[ ! -e "$swp" ]]; then printf "\n\n%s\n\n" "$swp"; (/usr/bin/nano "$scriptname"); exit
     else printf "\n%s is already being edited.\n%s exists; try fg or look in another window.\n" "$scriptname" "$swp"; exit;
  fi; }

function pause(){ read -p "$*" ; }


function calculatetime(){
duration=$(find -type f -name "$1" -print0 | xargs -0 mplayer -vo dummy -ao dummy -identify 2>/dev/null | perl -nle '/ID_LENGTH=([0-9\.]+)/ && ($t +=$1) && printf "%02d:%02d:%02d\n",$t/3600,$t/60%60,$t%60' | tail -n 1)
hours=$(find -type f -name "$1" -print0 | xargs -0 mplayer -vo dummy -ao dummy -identify 2>/dev/null | perl -nle '/ID_LENGTH=([0-9\.]+)/ && ($t +=$1) && printf "%02d\n",$t/3600' | tail -n 1)
minutes=$(find -type f -name "$1" -print0 | xargs -0 mplayer -vo dummy -ao dummy -identify 2>/dev/null | perl -nle '/ID_LENGTH=([0-9\.]+)/ && ($t +=$1) && printf "%02d\n",$t/60%60' | tail -n 1)
seconds=$(find -type f -name "*$1" -print0 | xargs -0 mplayer -vo dummy -ao dummy -identify 2>/dev/null | perl -nle '/ID_LENGTH=([0-9\.]+)/ && ($t +=$1) && printf "%02d\n",$t%60' | tail -n 1)

[[ "$hours" =~ "0*(.*)" ]] && hours=${BASH_REMATCH[1]}
#[[ "$minutes" =~ "0*(.*)" ]] && minutes=BASH_REMATCH[1]}
[[ "$minutes" =~ "0*(.*)" ]] && minutes=${BASH_REMATCH[1]}
[[ "$seconds" =~ "0*(.*)" ]] && seconds=${BASH_REMATCH[1]}

printf "Duration %s\n" "$duration"
#if [[ $seconds -gt 29 ]]; then ((minutes++)); fi

#printf "Duration of ${PWD##*/}: %02d:%02d hh:mm\n" ${hours#0} ${minutes#0}
hours="${hours#0}"
hourmin=$(( hours*60 ))
echo "hourmin $hourmin"
minutes="${minutes#0}"
secmin=$((hourmin+minutes))
echo "secmin $secmin"
secmin=$((secmin*60))
seconds="${seconds#0}"
echo "secmin  $secmin"
echo "seconds $seconds"
totalsec=$(( "$seconds" + "$secmin" ))
echo "$totalsec"
divsec=$(python3 -c "print($totalsec/4)")
echo "$divsec"
}

#####################################################
# Main
#####################################################

#this should be removed as an example
filenum=$(ls *.@(flac|mp3|MP3|wav|m4?|ogg|MP4|mp4|wma)|wc -l)
echo "filenum: $filenum"


[[ "$1" == @(edit|e|nano) ]] && editscript

[[ ! -f "$1" ]] &&
printf '\n%s does not exist, please check the file name and try again.\n' "$1" &&
exit 1

wholefile="$1"
inext="${1##*.}"
filenm="${1%.*}"

if [[ "$inext" == "m4b" ]]
 then
   ext="$inext"
   outext="m4a"
elif [[ "$inext" == @(mp3|opus|m4a|flac|wav) ]]
 then
  ext="$inext"; outext="$inext"
 else
  printf "%s is not equal to a compatible file format of .mp3, .opus, .m4a, m4b, .wav.  Please correct the error and try again."
  exit 1
fi

#printf ' inext=%s\noutext=%s\n   ext=%s' "$inext" "$outext" "$ext"

echo "File to split: $wholefile"
calculatetime "$wholefile"
pause "Any key to continue quartering $wholefile... "
count=1

while [[ "$count" -lt 5 ]]
  do
    echo "$count"
#echo '>>>>>       ffmpeg -i "$wholefile" -ss $(python -c "print(($count-1)*$divsec)") -to $(python -c "print($count*$divsec)") -acodec copy "${wholefile%.*} -- Part 0$count.$ext" '
#    ffmpeg -ss $(python -c "print(($count-1)*$divsec)") -to $(python -c "print($count*$divsec)") -i "$whilefile" -acodec copy "${wholefile%.*} -- Part 0$count.$ext"
    ffmpeg -n -nostdin -hide_banner -stats -ss $(python3 -c "print(($count-1)*$divsec)") -to $(python3 -c "print($count*$divsec)") -i "$wholefile" -vn -acodec copy "${wholefile%.*} -- Part 0$count.$outext"
    ((count++))
  done

for i in First Second Third Fourth
 do
   ((n++))
   for f in *" -- Part 0$n.$outext"
    do
      mv "$f" "${f/./: $i Quarter.}"
    done
 done

mediaduration


#https://www.reddit.com/r/ffmpeg/comments/107p3mh/remove_all_apart_from_audio/
#Mon Dec 11 10:52:50 AM EST 2023

